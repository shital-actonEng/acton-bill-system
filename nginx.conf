events {}

http {
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/certs/fullchain.crt;
        ssl_certificate_key /etc/nginx/certs/privkey.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Reverse proxy API calls to host machine
        location /api/ {
            proxy_pass https://host.docker.internal:3000/api/;
            proxy_ssl_verify off;  # Accept self-signed certificate
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy everything else to Next.js frontend
        location / {
            proxy_pass http://nextjs:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}



# Redirect HTTP to HTTPS
# events {}

# http {
#     server {
#         listen 80;
#         server_name localhost;
#         return 301 https://$host$request_uri;
#     }

#     server {
#         listen 443 ssl;
#         server_name localhost;

#         # ssl cert and key path from docker and for local use cert and key full path from your local directory 
#         ssl_certificate     /etc/nginx/certs/fullchain.crt;
#         ssl_certificate_key /etc/nginx/certs/privkey.key;

#         location / {
#             proxy_pass         http://nextjs:3000;
#             proxy_http_version 1.1;
#             proxy_set_header   Upgrade $http_upgrade;
#             proxy_set_header   Connection 'upgrade';
#             proxy_set_header   Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
# }


